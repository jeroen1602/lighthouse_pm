def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

def home = System.getProperty('user.home')
def keystoreProperties = new Properties()
def keystorePropertiesFile = new File(home + '/android-keys/key.properties')
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}
if (keystoreProperties['storeFile'] && keystoreProperties['storeFile'].contains('~')) {
    keystoreProperties['storeFile'] = keystoreProperties['storeFile'].replace('~', home)
}

android {
    compileSdkVersion 33
    ndkVersion "21.3.6528147"

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
        googlePlay {
            java.srcDirs += 'src/googlePlay/kotlin'
        }
        defaultVersion {
            java.srcDirs += 'src/defaultVersion/kotlin'
        }
    }


    defaultConfig {
        applicationId "com.jeroen1602.lighthouse_pm"
        minSdkVersion 21
        targetSdkVersion 33
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
    }
    signingConfigs {
        release {
            if (!keystoreProperties['keyAlias']) {
                println "WARNING: Release keystore has not been found! Building release builds will be impossible!"
                println "Keystore properties should be located at: `${keystorePropertiesFile}`."
                println "Go to `android/app/build.gradle` to change this if needed!"
            } else {
                keyAlias keystoreProperties['keyAlias']
                keyPassword keystoreProperties['keyPassword']
                storeFile keystoreProperties['storeFile'] ? file(keystoreProperties['storeFile']) : null
                storePassword keystoreProperties['storePassword']
            }
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release
            ndk {
                abiFilters "armeabi-v7a", "arm64-v8a", "x86_64"
            }
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    flavorDimensions 'productFlavors'
    productFlavors {
        googlePlay {
            dimension 'productFlavors'
        }
        defaultVersion {
            dimension 'productFlavors'
        }
    }
    lint {
        //TODO: check to see if this can be removed in future versions, since a lint for release builds is useful
        checkReleaseBuilds true
        disable 'InvalidPackage'
    }
    namespace 'com.jeroen1602.lighthouse_pm'
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }

    kotlinOptions {
        jvmTarget = "11"
    }
}

flutter {
    source '../..'
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation "com.polidea.rxandroidble2:rxandroidble:1.17.2"

    // For now only needed for googlePlayImplementation
    googlePlayImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.7.0"

    def billing_version = "5.2.0"

    googlePlayImplementation "com.android.billingclient:billing:$billing_version"
    googlePlayImplementation "com.android.billingclient:billing-ktx:$billing_version"

}
